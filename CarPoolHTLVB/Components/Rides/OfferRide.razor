@page "/Rides/OfferRide"
@using CarPoolHTLVB.Components.Account.Shared
@using CarPoolHTLVB.Data
@using Microsoft.AspNetCore.Authorization
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using CarPoolHTLVB.Components.Account; 
@rendermode InteractiveServer
@inject RideStore Store
@inject ApplicationUser User
@inject IdentityRedirectManager RedirectManager
@inject NavigationManager NaviManager
@attribute [Authorize] 
 

<PageTitle>Offer a Ride</PageTitle>

<AuthorizeView Roles="User,Admin">
    <Authorized>
        <div class="row">
            <section> 
                <EditForm Context="editFormContext" Model="CurrentRideModel" OnValidSubmit="TryStoreRideOnValidSubmit" FormName="offerride">
                    <DataAnnotationsValidator />
                    <h2>Prepare your ride...</h2>
                    <hr /> 
                    @*<Validatio class="text-danger" role="alert" />*@
                    <!-- For ClassmatesCanJoin -->
                    <div class="form-floating mb-3 row">
                        <div class="col-md-6">
                            <label>I drive from...</label>
                            <input class="form-control" id="LocationFrom" @bind=CurrentRideModel.LocationFrom />
                            @*<ValidationMessage For> </ValidationMessage>*@
                        </div>
                    </div> 
                    <div class="form-floating mb-3 row">
                        <div class="col-md-6">
                            <label>to this destination...</label>
                            <input class="form-control" id="LocationTo" @bind=CurrentRideModel.LocationTo />

                        </div>
                    </div> 
                    <div class="form-floating mb-3 row">
                        <div class="col-md-6">
                            <label>Departure time:</label>
                            <input type="datetime-local" id="departureTime" @bind="CurrentRideModel.DepartureTime" class="form-control" />
                        </div>
                    </div> 
                    <div class="form-floating mb-3 row">
                        <div class="col-md-6">
                            <label>Arrival time:</label>
                            <input type="datetime-local" id="arrivalTime" @bind="CurrentRideModel.ArrivalTime" class="form-control" />
                        </div>
                    </div> 
                    <div class="form-floating mb-3 row">
                        <div class="col-md-6">
                            <label>Classmates are welcome...</label>
                            <input type="checkbox" id="ClassmatesCanJoin" @bind="ClassmatesCanJoin" />

                        </div>
                    </div> 
                    <div class="form-floating mb-3 row">
                        <div class="col-md-6">
                            <label>Teachers are welcome...</label>
                            <input type="checkbox" id="TeachersCanJoin" @bind="TeachersCanJoin" />
                        </div>
                    </div> 
                    <div class="form-floating mb-3">
                        <div class="col-md-6">
                            <label>Enter villages that get passed:</label>
                            <input rows="1" id="villagesPassed" @bind="CurrentRideModel.VillagesPassed" class="form-control" placeholder="village1, village2" />
                        </div>
                    </div> 
                    <div class="form-floating mb-3 row">
                        <div class="col-md-6">
                            <label>How many seats?</label>
                            <input type="number" id="seats" @bind="CurrentRideModel.Seats" class="form-control" required />
                        </div>
                    </div>
                     
                    <div class="form-floating mb-3 row">
                        <div class="col-md-6">
                            <label>Are smokers welcome on your ride?</label>
                            <input type="checkbox" id="smoker" @bind="Smoker" />
                        </div>
                    </div>
                     
                    <div class="form-floating mb-3 row">
                        <div class="col-md-6">
                            <label>Do you offer your ride for free?</label>
                            <input type="checkbox" id="isFree" @bind="IsFree" />
                        </div>
                    </div>
                     
                    <div class="form-floating mb-3">
                        <div class="col-md-6">
                            <label>Choose the frequency of your ride</label>
                            <select id="frequency" @bind="CurrentRideModel.Frequency" class="form-select">
                                <option value="Daily">Daily</option>
                                <option value="Weekly">Weekly</option>
                                <option value="Monthly">Monthly</option>
                                <option value="OnlyOnce">Only Once</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-floating mb-3">
                        <div class="col-md-6">
                            <button type="submit" class="w-100 btn btn-lg btn-primary">Offer ride</button>
                        </div>
                    </div>
                </EditForm>
            </section>
        </div>
    </Authorized>
    <NotAuthorized>
        <p>You must be logged in to offer a ride.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string? errorMessage;
    private bool ClassmatesCanJoin { get; set; } = true;
    public bool TeachersCanJoin { get; set; } = true;

    public bool Smoker { get; set; } = false;

    public bool IsFree { get; set; } = true; 

    private OfferRideModel CurrentRideModel = new OfferRideModel();

    private void TryStoreRideOnValidSubmit()
    {
        CurrentRideModel.OffererID = User.Id;
        if (!ClassmatesCanJoin) CurrentRideModel.ClassmatesCanJoin = "false";
        if (!TeachersCanJoin) CurrentRideModel.TeachersCanJoin = "false";
        if (!IsFree) CurrentRideModel.IsFree = "false";
        if (Smoker) CurrentRideModel.Smoker = "true";

        //Fix: Ride.properties = null
        if (Store.SaveRide(CurrentRideModel))
        { 
            //vl anzeigen dass funktioneirt hat und gespeichert hat was mit javascript?
            // oder redirecten zu MyOfferedRides oder sowos
            NaviManager.NavigateTo("/Counter");

        }
        else
        {

        }

    }
    public class OfferRideModel
    {
        public string? OffererID { get; set; }
        [Required] 
        public string? LocationFrom { get; set; }

        [Required] 
        public string? LocationTo { get; set; }

        public DateTime DepartureTime { get; set; } = DateTime.Now;

        public DateTime ArrivalTime { get; set; } = DateTime.Now;

        public string? VillagesPassed { get; set; } 

        public string ClassmatesCanJoin { get; set; } = "true"; 

        public string TeachersCanJoin { get; set; } = "true";

        public int Seats { get; set; }

        public string Smoker { get; set; } = "false";

        public string IsFree { get; set; } = "true"; 
        [Required] 
        public string? Frequency { get; set; }

    }

}

